N_simul <- 100000  ; #Simulations
N_points <- 24       #Discretization points
S <- 61.9 ; K <- S*1.3 ; r <- 0.03 ;t <- 1 ; dt <- t/N_points  #Stock-Strike-riskfreerate-maturity-discretized time
Rho <- -0.5 ; Correl_vol <- rbind(c(1,Rho),c(Rho,1)) #Correlation matrix of the Brownian motion for the vol
Vol <- 0.65 ; B <- 1.05 ; Tta <- 0.125 ; volvol <- 0.15 #Parameters of the first Stoch. vol. derived from calibration
x <- c() ; V <- c(); payoff <- c()
for(i in 1:N_simul){ #Initialize the value of S, Vol_1 and Vol_2
    if(i%%(N_simul/10) == 0){print(paste( i,'Simulations'))}
    x[1] <- S ; V[1] <- Vol #Initialize the price and both volatility vectors
    for(j in 2:N_points){
        Gauss1 <- mvrnorm(1,mu=c(0,0),Sigma = Correl_vol)
        V[j] <- V[j-1] + B*(Tta -V[j-1])*dt + volvol*sqrt(V[j-1])*Gauss1[1]*sqrt(dt)
        x[j] <- x[j-1] + x[j-1] *( r*dt + sqrt(V[j])*Gauss1[2]*sqrt(dt) )
    }
    payoff[i] <- max(x[N_points]-K,0) 
}
call <- exp(-r*t)*mean(payoff) #vanilla call option pricing
print(call)
#The following line help visualizing one trajectory, 
#if you wish to visualize whole trajectories (keep it up to 100 max)
#initialize a matrix before the montecarlo simulations and store every paths created 
Date <- (1:N_points) / N_points * t;
Simul <- data.frame(Date, x, "Stock");
Simul_vol <- data.frame(Date, V, "Vol");
colnames(Simul) <- c("Date", "Value", "Type");colnames(Simul_vol) <- c("Date", "Value", "Type");
Visu <- rbind(Simul, Simul_vol);
ggplot(Visu, aes(x = Date, y = Value)) + geom_line() + facet_grid(Type ~., scales = "free")
